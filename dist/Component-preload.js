/**
* This file was auto-generated by SAP Web IDE build and includes all
* the source files required by SAPUI5 runtime for performance optimization.
* PLEASE DO NOT EDIT THIS FILE!! Changes will be overwritten the next time the build is run.
*/
jQuery.sap.registerPreloadedModules({
	"version": "2.0",
	"name": "so/mng /Component-preload",
	"modules": {
		"so/mng /controller/Detail.controller.js": "/*global location */\r\nsap.ui.define([\r\n\t\t\"so/mng /controller/BaseController\",\r\n\t\t\"sap/ui/model/json/JSONModel\",\r\n\t\t\"so/mng /model/formatter\",\r\n\t    \"sap/m/MessageToast\"\r\n\t    ], function (BaseController, JSONModel, formatter , MessageToast ) {\r\n\t\t\"use strict\";\r\n\r\n\t\treturn BaseController.extend(\"so.mng .controller.Detail\", {\r\n\r\n\t\t\tformatter: formatter,\r\n\r\n\t\t\t/* =========================================================== */\r\n\t\t\t/* lifecycle methods                                           */\r\n\t\t\t/* =========================================================== */\r\n\r\n\t\t\tonInit : function () {\r\n\t\t\t\t// Model used to manipulate control states. The chosen values make sure,\r\n\t\t\t\t// detail page is busy indication immediately so there is no break in\r\n\t\t\t\t// between the busy indication for loading the view's meta data\r\n\t\t\t\tvar oViewModel = new JSONModel({\r\n\t\t\t\t\tbusy : false,\r\n\t\t\t\t\tdelay : 0,\r\n\t\t\t\t\tlineItemListTitle : this.getResourceBundle().getText(\"detailLineItemTableHeading\")\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.getRouter().getRoute(\"object\").attachPatternMatched(this._onObjectMatched, this);\r\n\r\n\t\t\t\tthis.setModel(oViewModel, \"detailView\");\r\n\r\n\t\t\t\tthis.getOwnerComponent().getModel().metadataLoaded().then(this._onMetadataLoaded.bind(this));\r\n\t\t\t\t\r\n\t\t\t\t/***************************************************************/\r\n\t\t\t\t/* VIZ GRAPHIC\t\t                                           */\r\n\t\t\t\t/***************************************************************/\r\n\r\n\t            /*\r\n\t            ,\r\n\t     'sap/viz/ui5/controls/common/feeds/FeedItem',\r\n        'sap/viz/ui5/data/FlattenedDataset',\r\n        'sap/viz/ui5/format/ChartFormatter'\r\n\t            FeedItem, FlattenedDataset, ChartFormatter \r\n\t            var oVizFrame = this.getView().byId(\"idVizFrameColumn\");\r\n            \toVizFrame.setVizType('column');\r\n            \toVizFrame.setUiConfig({          \"applicationSet\": \"fiori\"           });\r\n\t\t\t\t\r\n\t\t\t\tvar oDataset = new sap.viz.ui5.data.FlattenedDataset({\r\n\t\t\t\t\t'dimensions' : [{ 'name' : 'Date',\t\t'value' : \"{Date}\"\t\t}],\r\n\t\t\t\t\t'measures'   : [{ 'name' : 'Acess',  'value' : '{Type}'   }],\r\n\t\t\t\t\t              '   data' : {  'path' : \"/StatSet\"             }\t\t\t\t}).bindData(\"/StatSet\");\r\n\t\t\t\t\r\n\t\t\t\t// create a VizFrame\r\n\t\t\t\t//var oVizFrame = new sap.viz.ui5.controls.VizFrame({\r\n\t\t\t\t//\t'uiConfig' : {\t          oVizFrame.setVizType('column');\r\n\t\t\t\t//\t'vizType' : 'bar' \t//Supported chart types: bubble, combination, column, bar, line, stacked_bar, stacked_column, bullet, vertical_bullet, timebubble.\r\n\t\t\t\t//});\t\t\t\t\r\n\t\t\r\n\t\t\t\toVizFrame.setDataset(oDataset);\r\n\t\t\t\tvar feedPrimaryValues = new sap.viz.ui5.controls.common.feeds.FeedItem({\r\n\t\t\t\t\t'uid' : \"primaryValues\",\r\n\t\t\t\t\t'type' : \"Measure\",\r\n\t\t\t\t\t'values' : [\"Type\"]\r\n\t\t\t\t}), feedAxisLabels = new sap.viz.ui5.controls.common.feeds.FeedItem({\r\n\t\t\t\t\t'uid' : \"axisLabels\",\r\n\t\t\t\t\t'type' : \"Dimension\",\r\n\t\t\t\t\t'values' : [\"Date\"]\r\n\t\t\t\t});\r\n\t\t\r\n\t\t\t\toVizFrame.addFeed(feedPrimaryValues);\r\n\t\t\t\toVizFrame.addFeed(feedAxisLabels);\r\n\t\t\r\n\t\t\t\toVizFrame.attachSelectData(function(event) {\r\n\t\t\t\t\tvar data = event.getParameter('data');\r\n\t\t\t\t\tfor (var i = 0; i < data.length; i++) {\r\n\t\t\t\t\t\t//console.log(oDataset.findContext(data[i].data));\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\r\n\t\t\t\tvar properties = {\t\t'legend' : {'visible' : true} };\r\n\t\t\t\tvar scales = [{\t'feed': 'primaryValues',\t'palette': ['#ff0000']\t\t\t}];\r\n\t\t\r\n\t\t\t\tvar customizations = {id:\"sap.viz.custom\",customOverlayProperties: {}};\r\n\t\t\t\toVizFrame.setVizScales(scales);\r\n\t\t\t\toVizFrame.vizUpdate({ //'data' : data,\r\n\t\t\t\t\t'properties' : properties,\t'scales' : scales,\t'customizations' : customizations\r\n\t\t\t\t\t//'feeds' : feeds\r\n\t\t\t\t});*/\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tonShowLink : function(oEvent) {\r\n\t\t\t\t//var splashWeb = 'https://standard.experiencesplash.com/home/projects/e2852930baa0365/research/participant/adc4be3c1b75b16f0baa1af8';\t\r\n\t\t\t\t//splashWeb = \"http://www.cesigrup.com&output=embed\";\r\n\t\t\t\t//document.getElementById(\"application-SoftwareManagement-display-component---detail--boxWeb2\").src = splashWeb;\r\n\t\t\t\t\r\n\t\t\t\t//document.getElementById(\"boxWeb2\").src = splashWeb;\r\n\t\t\t\t//document.getElementById(\"application-SoftwareManagement-display-component---detail--boxWeb3\").load( splashWeb );\r\n\r\n\t\t\t\t//document.getElementById(\"application-SoftwareManagement-display-component---detail--boxWeb\").attr(\"src\",splashWeb);\r\n\t\t\t\t/*var oItem = oEvent.getSource();\r\n\t\t\t\tvar oRouter = sap.ui.core.UIComponent.getRouterFor(this);\r\n\t\t\t\toRouter.navTo(\"objectDetails\", {\r\n\t\t\t\t\tobjectId: \"1\" ,  //\toItem.getBindingContext().getObject().ProductID\r\n\t\t\t\t\tdetails : '2'\r\n\t\t\t\t});*/\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t// check links - if youtube - open in the frame. else open a new tab \r\n\t\t\t\tvar oDialog1 = new sap.m.Dialog();\r\n\t\t\t\toDialog1.setTitle(\"Cloud Resource\");\r\n                \r\n                var rscPath = oEvent.getSource().getBindingContext().getPath();\r\n\t\t\t\tvar oRsc = oEvent.getSource().getBindingContext().getModel().getData(rscPath);\r\n                \r\n                var oText = new sap.m.Text({ text: oRsc.Link });\r\n                var oText2 = new sap.m.Text( );\r\n                \r\n                var  oLink2 = new sap.m.Link(\"l2\");\r\n    \t\t\toLink2.setText(\"Link to URL\");\r\n    \t\t\toLink2.setTooltip(\"Target: _blank\");\r\n    \t\t\toLink2.setHref( oRsc.Link );\r\n    \t\t\toLink2.setTarget(\"_blank\");\r\n                \r\n                var centerLayout = new sap.m.VBox( );\r\n            \t\tcenterLayout.setAlignItems(\"Center\");\r\n            \t\tcenterLayout.setJustifyContent(\"Center\");\r\n                centerLayout.addItem(oText);\r\n                \r\n                switch(oRsc.Type) {\r\n                case \"picture\":\r\n                    oText2.setText(\"picture\");\r\n                    var oPic = new sap.m.Image({src:  oRsc.Link }); //, width : \"800px\" , height : \"600px\"});\r\n                    centerLayout.addItem(oLink2);\r\n                    centerLayout.addItem(oPic);\r\n                    break;\r\n                case \"video\":\r\n                    oText2.setText(\"video\");\r\n                    var html = new sap.ui.core.HTML();  \r\n                    var oString = \"<div id=\\\"divPdf\\\"><iframe id='vidFrame' src = '\"+ oRsc.Link +\"width= '800px' height= '200' ></iframe>\";\r\n                    html.setContent(oString);  \r\n                    centerLayout.addItem(oLink2);\r\n                    centerLayout.addItem(html);\r\n                    break;\r\n                case \"web\":\r\n                   oText2.setText(\"web\");\r\n                   centerLayout.addItem(oLink2);\r\n                \r\n                    break;\r\n                default:\r\n                    //default //oText2.setText(\"nothing\");\r\n                }\r\n            \r\n\t\t\t\toDialog1.addContent(centerLayout);\r\n\t\t\t\toDialog1.addButton(new sap.m.Button({text: \"OK\", press:function(){    \r\n\t\t\t\t    $(\"#vidFrame\").attr(\"src\", \"\");\r\n\t\t\t\t    oDialog1.close();}}));\r\n\t\t\t\toDialog1.open();\r\n\r\n\t\t\t\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tshowTeamDialog: function(oEvent) {\r\n\r\n\t\t\t\t/*this._Dialog = sap.ui.xmlfragment(\"OpenSAPBPL.fragments.Dialog\", this);\r\n\t\t\t\toEvent.getSource().addDependent(this._Dialog);\r\n\t\t\t\tthis._Dialog.open();*/\r\n\t\t\t\t\r\n\t\t\t\t//var playerPath = oEvent.getSource().getParent().getBindingContext().getPath();\r\n\t\t\t\t//var playerName = oEvent.getSource().getBindingContext().getModel().getData(playerPath).PlayerName;\r\n\t\t\t\t/*var playerName = oEvent.getSource().getBindingContext().getModel().getData(playerPath).PlayerName;\r\n\t\t\t\tvar injuryStatus = oEvent.getSource().getBindingContext().getModel().getData(playerPath+ \"/Injured\").Injury;\r\n\t\t\t\tif (!injuryStatus){\r\n\t\t\t\tvar selectStatus = oEvent.getSource().getBindingContext().getModel().getData(playerPath).Selected;\r\n\t\t\t\tvar teamPath = this.getView().getBindingContext().getPath();\r\n\t\t\t\tvar count = this.getView().getBindingContext().getModel().getData(teamPath).SelectedPlayers;\r\n\t\t\t\tif (selectStatus) {\r\n\t\t\t\t    \r\n\t\t\t\t<VBox>\r\n                <ObjectHeader title=\"{PlayerName}\" number=\"{Position}\" numberUnit=\"{Nationality}\">\r\n                    <attributes>\r\n                        <ObjectAttribute text=\"Number: {Number}\"/>\r\n                        <ObjectAttribute text=\"Foot: {Foot}\"/>\r\n                    </attributes>\r\n                </ObjectHeader>\r\n                </VBox>\r\n                \r\n                <VBox>\r\n                    <HBox width=\"90%\">\r\n                        <Text text=\"{Description}\"/>\r\n                        <Image src=\"{Image}\" width=\"100px\"/>\r\n                    </HBox>\r\n                    <HBox>\r\n                        <Input type=\"Text\" value=\"{PlayerNote}\"/>\r\n                        <Button text=\"Change Note\" press=\"playerNoteEdit\"/>\r\n                    </HBox>\r\n                </VBox>\r\n                \r\n                <VBox>\r\n                <Label text=\"Selected?\"></Label>\r\n                <Switch customTextOn=\"Yes\" customTextOff=\"No\" change=\"onSelectPlayer\" state=\"{Selected}\"/>\r\n                </VBox>    \r\n\t\t\t    \r\n\t\t\t        object header - icon - name \r\n\t\t\t        position, phone and email  \r\n\t\t\t                \r\n\t\t\t    */\r\n\t\t\t\t\t\r\n\t\t\t\tvar oDialog1 = new sap.m.Dialog();\r\n\t\t\t\toDialog1.setTitle(\"Team Member\");\r\n\t\t\t\t//var oText = new sap.m.Text({ text: \"Hello World!\"});\r\n                \r\n                var teamPath = oEvent.getSource().getBindingContext().getPath();\r\n\t\t\t\tvar oTeam = oEvent.getSource().getBindingContext().getModel().getData(teamPath);\r\n                \r\n                var oHeader = new sap.m.ObjectHeader(); \r\n                oHeader.setTitle(oTeam.TeamMember);\r\n                oHeader.insertAttribute(new sap.m.ObjectAttribute({text: oTeam.Phone, title: \"Tlf\" }),   0);\r\n                oHeader.insertAttribute(new sap.m.ObjectAttribute({text: oTeam.Email, title: \"email\" }), 0);\r\n                oHeader.insertAttribute(new sap.m.ObjectAttribute({ text: oTeam.Role, title: \"Role\"}),   0);\r\n\r\n              //  oHeader.setIcon(oTeam.Picture);\r\n                var oPic = new sap.m.Image({src:  oTeam.Picture, width : \"200px\" , height:\"200px\" });\r\n                \r\n                \r\n                var centerLayout = new sap.m.VBox( );\r\n            \tcenterLayout.setAlignItems(\"Center\");\r\n                centerLayout.setJustifyContent(\"Center\");\r\n                centerLayout.addItem(oHeader);\r\n                centerLayout.addItem(oPic);\r\n\r\n\t\t\t\t//oDialog1.addContent(oHeader);\r\n\t\t\t\toDialog1.addContent(centerLayout);\r\n\t\t\t\toDialog1.addButton(new sap.m.Button({text: \"OK\", press:function(){oDialog1.close();}}));\r\n\t\t\t\toDialog1.open();\r\n\r\n\t\t\t\t\r\n\t\t\t},\r\n\t\t\t\r\n\r\n\r\n\r\n\r\n\t\t\t/* =========================================================== */\r\n\t\t\t/* event handlers                                              */\r\n\t\t\t/* =========================================================== */\r\n\r\n\t\t\t/**\r\n\t\t\t * Event handler when the share by E-Mail button has been clicked\r\n\t\t\t * @public\r\n\t\t\t */\r\n\t\t\t \r\n\t\t\t \t\t\t\r\n\t\t\tonNewTest  : function() {\r\n\t\t\t\tMessageToast.show(\"New Test functionallity will be implemented \");\r\n\t\t\t},\r\n\t\t\tonMoreTest  : function() {\r\n\t\t\t\tMessageToast.show(\"More Button functionallity will be implemented \");\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\toReopen  : function() {\r\n\t\t\t\tMessageToast.show(\"Re-open functionallity will be implemented \");\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tonClose  : function() {\r\n\t\t\t\tMessageToast.show(\"Edit functionallity will be implemented \");\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tonMoreCR  : function() {\r\n\t\t\t\tMessageToast.show(\"More Button functionallity will be implemented \");\r\n\t\t\t},\r\n\t\t\t\r\n\r\n\t\t\tonShareEmailPress : function () {\r\n\t\t\t\tvar oViewModel = this.getModel(\"detailView\");\r\n\r\n\t\t\t\tsap.m.URLHelper.triggerEmail(\r\n\t\t\t\t\tnull,\r\n\t\t\t\t\toViewModel.getProperty(\"/shareSendEmailSubject\"),\r\n\t\t\t\t\toViewModel.getProperty(\"/shareSendEmailMessage\")\r\n\t\t\t\t);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Event handler when the share in JAM button has been clicked\r\n\t\t\t * @public\r\n\t\t\t */\r\n\t\t\tonShareInJamPress : function () {\r\n\t\t\t\tvar oViewModel = this.getModel(\"detailView\"),\r\n\t\t\t\t\toShareDialog = sap.ui.getCore().createComponent({\r\n\t\t\t\t\t\tname : \"sap.collaboration.components.fiori.sharing.dialog\",\r\n\t\t\t\t\t\tsettings : {\r\n\t\t\t\t\t\t\tobject :{\r\n\t\t\t\t\t\t\t\tid : location.href,\r\n\t\t\t\t\t\t\t\tshare : oViewModel.getProperty(\"/shareOnJamTitle\")\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\toShareDialog.open();\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Updates the item count within the line item table's header\r\n\t\t\t * @param {object} oEvent an event containing the total number of items in the list\r\n\t\t\t * @private\r\n\t\t\t */\r\n\t\t\tonListUpdateFinished : function (oEvent) {\r\n\t\t\t\tvar sTitle,\r\n\t\t\t\t\tiTotalItems = oEvent.getParameter(\"total\"),\r\n\t\t\t\t\toViewModel = this.getModel(\"detailView\");\r\n\r\n\t\t\t\t// only update the counter if the length is final\r\n\t\t\t\tif (this.byId(\"lineItemsList\").getBinding(\"items\").isLengthFinal()) {\r\n\t\t\t\t\tif (iTotalItems) {\r\n\t\t\t\t\t\tsTitle = this.getResourceBundle().getText(\"detailLineItemTableHeadingCount\", [iTotalItems]);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t//Display 'Line Items' instead of 'Line items (0)'\r\n\t\t\t\t\t\tsTitle = this.getResourceBundle().getText(\"detailLineItemTableHeading\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\toViewModel.setProperty(\"/lineItemListTitle\", sTitle);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t/* =========================================================== */\r\n\t\t\t/* begin: internal methods                                     */\r\n\t\t\t/* =========================================================== */\r\n\r\n\t\t\t/**\r\n\t\t\t * Binds the view to the object path and expands the aggregated line items.\r\n\t\t\t * @function\r\n\t\t\t * @param {sap.ui.base.Event} oEvent pattern match event in route 'object'\r\n\t\t\t * @private\r\n\t\t\t */\r\n\t\t\t_onObjectMatched : function (oEvent) {\r\n\t\t\t\tvar sObjectId =  oEvent.getParameter(\"arguments\").objectId;\r\n\t\t\t\tthis.getModel().metadataLoaded().then( function() {\r\n\t\t\t\t\tvar sObjectPath = this.getModel().createKey(\"softwareSet\", {\r\n\t\t\t\t\t\tsoftwareID :  sObjectId\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis._bindView(\"/\" + sObjectPath);\r\n\t\t\t\t}.bind(this));\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Binds the view to the object path. Makes sure that detail view displays\r\n\t\t\t * a busy indicator while data for the corresponding element binding is loaded.\r\n\t\t\t * @function\r\n\t\t\t * @param {string} sObjectPath path to the object to be bound to the view.\r\n\t\t\t * @private\r\n\t\t\t */\r\n\t\t\t_bindView : function (sObjectPath) {\r\n\t\t\t\t// Set busy indicator during view binding\r\n\t\t\t\tvar oViewModel = this.getModel(\"detailView\");\r\n\r\n\t\t\t\t// If the view was not bound yet its not busy, only if the binding requests data it is set to busy again\r\n\t\t\t\toViewModel.setProperty(\"/busy\", false);\r\n\r\n\t\t\t\tthis.getView().bindElement({\r\n\t\t\t\t\tpath : sObjectPath,\r\n\t\t\t\t\tevents: {\r\n\t\t\t\t\t\tchange : this._onBindingChange.bind(this),\r\n\t\t\t\t\t\tdataRequested : function () {\r\n\t\t\t\t\t\t\toViewModel.setProperty(\"/busy\", true);\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tdataReceived: function () {\r\n\t\t\t\t\t\t\toViewModel.setProperty(\"/busy\", false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\t_onBindingChange : function () {\r\n\t\t\t\tvar oView = this.getView(),\r\n\t\t\t\t\toElementBinding = oView.getElementBinding();\r\n\r\n\t\t\t\t// No data for the binding\r\n\t\t\t\tif (!oElementBinding.getBoundContext()) {\r\n\t\t\t\t\tthis.getRouter().getTargets().display(\"detailObjectNotFound\");\r\n\t\t\t\t\t// if object could not be found, the selection in the master list\r\n\t\t\t\t\t// does not make sense anymore.\r\n\t\t\t\t\tthis.getOwnerComponent().oListSelector.clearMasterListSelection();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar sPath = oElementBinding.getPath(),\r\n\t\t\t\t\toResourceBundle = this.getResourceBundle(),\r\n\t\t\t\t\toObject = oView.getModel().getObject(sPath),\r\n\t\t\t\t\tsObjectId = oObject.softwareID,\r\n\t\t\t\t\tsObjectName = oObject.SoftwareName,\r\n\t\t\t\t\toViewModel = this.getModel(\"detailView\");\r\n\r\n\t\t\t\tthis.getOwnerComponent().oListSelector.selectAListItem(sPath);\r\n\r\n\t\t\t\toViewModel.setProperty(\"/saveAsTileTitle\",oResourceBundle.getText(\"shareSaveTileAppTitle\", [sObjectName]));\r\n\t\t\t\toViewModel.setProperty(\"/shareOnJamTitle\", sObjectName);\r\n\t\t\t\toViewModel.setProperty(\"/shareSendEmailSubject\",\r\n\t\t\t\t\toResourceBundle.getText(\"shareSendEmailObjectSubject\", [sObjectId]));\r\n\t\t\t\toViewModel.setProperty(\"/shareSendEmailMessage\",\r\n\t\t\t\t\toResourceBundle.getText(\"shareSendEmailObjectMessage\", [sObjectName, sObjectId, location.href]));\r\n\t\t\t},\r\n\r\n\t\t\t_onMetadataLoaded : function () {\r\n\t\t\t\t// Store original busy indicator delay for the detail view\r\n\t\t\t\tvar iOriginalViewBusyDelay = this.getView().getBusyIndicatorDelay(),\r\n\t\t\t\t\toViewModel = this.getModel(\"detailView\"),\r\n\t\t\t\t\toLineItemTable = this.byId(\"lineItemsList\"),\r\n\t\t\t\t\tiOriginalLineItemTableBusyDelay = oLineItemTable.getBusyIndicatorDelay();\r\n\r\n\t\t\t\t// Make sure busy indicator is displayed immediately when\r\n\t\t\t\t// detail view is displayed for the first time\r\n\t\t\t\toViewModel.setProperty(\"/delay\", 0);\r\n\t\t\t\toViewModel.setProperty(\"/lineItemTableDelay\", 0);\r\n\r\n\t\t\t\toLineItemTable.attachEventOnce(\"updateFinished\", function() {\r\n\t\t\t\t\t// Restore original busy indicator delay for line item table\r\n\t\t\t\t\toViewModel.setProperty(\"/lineItemTableDelay\", iOriginalLineItemTableBusyDelay);\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Binding the view will set it to not busy - so the view is always busy if it is not bound\r\n\t\t\t\toViewModel.setProperty(\"/busy\", true);\r\n\t\t\t\t// Restore original busy indicator delay for the detail view\r\n\t\t\t\toViewModel.setProperty(\"/delay\", iOriginalViewBusyDelay);\r\n\t\t\t}\r\n\r\n\t\t});\r\n\r\n\t}\r\n);",
		"so/mng /view/Detail.view.xml": "<mvc:View xmlns=\"sap.m\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns:semantic=\"sap.m.semantic\" xmlns:footerbar=\"sap.ushell.ui.footerbar\" xmlns:core=\"sap.ui.core\" xmlns:html=\"http://www.w3.org/1999/xhtml\" controllerName=\"so.mng .controller.Detail\"> \n\n\n\t<semantic:DetailPage id=\"page\" navButtonPress=\"onNavBack\" showNavButton=\"{device>/system/phone}\" title=\"{SoftwareName}\" busy=\"{detailView>/busy}\" busyIndicatorDelay=\"{detailView>/delay}\">\n\t\t<semantic:content>\n\t\t\t<ObjectHeader id=\"objectHeader\" title=\"{SoftwareDesc}\" backgroundDesign=\"Solid\" iconActive=\"true\" icon=\"{IconName}\">\n\t\t\t    <attributes>\n\t\t\t        <ObjectAttribute text=\"{ProgEnvironment}\" active=\"false\" id=\"__attribute0\" title=\"Prog. Env\"/>\n\t\t\t    </attributes>\n\t\t\t<statuses>\n\t\t\t    <ObjectStatus text=\"{Department}\" id=\"__status0\" title=\"Dpto\"/>\n\t\t\t</statuses>\n\t\t\t</ObjectHeader>\n\t\t\t<IconTabBar id=\"iconTabBar\" class=\"sapUiResponsiveContentPadding\">\n\t\t\t\t<items>\n\t\t\t\t\t<!-- ___________________________________________   INFO BUTTON _____________________________ -->\n\t\t\t\t\t<IconTabFilter id=\"iconTabBarFilter1\" icon=\"sap-icon://hint\" tooltip=\"{i18n>detailIconTabBarInfo}\" text=\"Info\">\n\t\t\t\t\t\t<content>\n\t\t\t\t\t\t\t<sap.ui.layout.form:SimpleForm xmlns:sap.ui.layout.form=\"sap.ui.layout.form\" xmlns:sap.ui.core=\"sap.ui.core\" editable=\"false\" layout=\"ResponsiveGridLayout\" id=\"__form0\">\n\t\t\t\t\t\t\t    <sap.ui.layout.form:content xmlns:sap.ui.layout.form=\"sap.ui.layout.form\">\n\t\t\t\t\t\t\t        <sap.ui.core:Title xmlns:sap.ui.core=\"sap.ui.core\" text=\"General Information\" id=\"__title0\"/>\n\t\t\t\t\t                <Label text=\"Documentation\" id=\"__label8\"/>\n\t\t\t\t\t                <Text text=\"{Documentation}\" maxLines=\"0\" id=\"__text32\" width=\"100%\"/>\n\t\n\t\t\t\t\t\t\t        <Label text=\"GUI Notes\" id=\"__label2\"/>\n\t\t\t\t\t\t\t        <Input width=\"100%\" id=\"__inputi1\" editable=\"false\" value=\"{FE_Notes}\"/>\n\n\t\t\t\t\t\t\t        <Label text=\"Back End Notes\" id=\"__label4\"/>\n\t\t\t\t\t\t\t        <Input width=\"100%\" id=\"__inputi2\" editable=\"false\" value=\"{BE_Notes}\"/>\n\t\t\t\t\t\t\t        \t\n\t\t\t\t\t\t\t       <Label text=\"Quality Plann\" id=\"__label7\"/>\n\t\t\t\t\t\t\t        <Input width=\"100%\" id=\"__inputi7\" editable=\"false\" value=\"{QualityPlan}\"/>\n\n\t\t\t\t\t\t\t        <Label text=\"Created\" id=\"__label5i\"/>\n\t\t\t\t\t\t\t        <Input width=\"100%\" id=\"__inputi3\" editable=\"false\" value=\"{CreationName}\"/>\n\t\t\t\t\t\t\t        <Input width=\"100%\" id=\"__inputi4\" editable=\"false\" value=\"{CreationDate}\"/>\t\n\t\t\t\t\t\t\t    \t\n\t\t\t\t\t\t\t    \t<Label text=\"Last Modification\" id=\"__label6i\"/>\n\t\t\t\t\t\t\t        <Input width=\"100%\" id=\"__inputi5\" editable=\"false\" value=\"{LastChangeName}\"/>\n\t\t\t\t\t\t\t        <Input width=\"100%\" id=\"__inputi6\" editable=\"false\" value=\"{LastChangeDate}\"/>\n\t\t\t\t\t\t\t        \t\n\t\t\t\t\t\t\t        </sap.ui.layout.form:content>\n\t\t\t\t\t\t\t</sap.ui.layout.form:SimpleForm>\n\t\t\t\t\t\t\t<List noDataText=\"No Team Members for this Software\" id=\"__list0\" headerText=\"Team Members \" items=\"{TeamSet}\" itemPress=\"\">\n\t\t\t\t\t\t\t    <items>   <StandardListItem type=\"Navigation\" counter=\"0\" title=\"{TeamMember}\" description=\"{Role} - Active: {Active}\" icon=\"{Picture}\" id=\"__item3\" detailPress=\"\" press=\"showTeamDialog\"/>   </items>\n\t\t\t\t\t\t\t</List>\n\t\t\t\t\t\t\t<!-- Table --> \n\t\t\t\t\t\t\t<!--<Table id=\"lineItemsList\" width=\"auto\" items=\"{TeamSet}\" updateFinished=\"\" noDataText=\"{i18n>detailLineItemTableNoDataText}\" busyIndicatorDelay=\"{detailView>/lineItemTableDelay}\" class=\"sapUiResponsiveMargin\" itemPress=\"showTeamDialog\">\n\t\t\t\t\t\t\t\t<headerToolbar>\n\t\t\t\t\t\t\t\t\t<Toolbar id=\"lineItemsToolbar\">\n\t\t\t\t\t\t\t\t\t\t<content>\n\t\t\t\t\t\t\t\t\t\t\t<Title id=\"lineItemsHeader\" text=\"Team Members\"/>\n\t\t\t\t\t\t\t\t\t\t\t<ToolbarSpacer id=\"__spacer1\"/>\n\t\t\t\t\t\t\t\t\t\t\t<Button text=\"Add\" icon=\"sap-icon://add\"> </Button>\n\t\t\t\t\t\t\t\t\t\t\t<Button text=\"Edit\" icon=\"sap-icon://edit\"> </Button>\n\t\t\t\t\t\t\t\t\t\t</content>\n\t\t\t\t\t\t\t\t\t<layoutData>\n\t\t\t\t\t\t\t\t\t    <FlexItemData id=\"__data12\"/>\n\t\t\t\t\t\t\t\t\t</layoutData>\n\t\t\t\t\t\t\t\t\t</Toolbar>\n\t\t\t\t\t\t\t\t</headerToolbar>\n\t\t\t\t\t\t\t\t<columns>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<Text text=\"{i18n>detailLineItemTableIDColumn}\"/>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column minScreenWidth=\"Tablet\" demandPopin=\"true\" hAlign=\"Right\">\n\t\t\t\t\t\t\t\t\t\t<Text text=\"Role/Position\"/>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column minScreenWidth=\"Tablet\" demandPopin=\"true\" hAlign=\"Right\">\n\t\t\t\t\t\t\t\t\t\t<Text text=\"Active\"/>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t</columns>\n\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t<ColumnListItem>\n\t\t\t\t\t\t\t\t\t\t<cells>\n\t\t\t\t\t\t\t\t\t\t\t<ObjectIdentifier title=\"{TeamMember}\"/>\n\t\t\t\t\t\t\t\t\t\t</cells>\n\t\t\t\t\t\t\t\t\t\t<cells>\t<ObjectIdentifier title=\"{Role}\"/>\t\t</cells>\n\t\t\t\t\t\t\t\t\t\t<cells>\t<ObjectIdentifier title=\"{Active}\"/> \t</cells>\n\t\t\t\t\t\t\t\t\t</ColumnListItem>\n\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t</Table> -->\n\t\t\t\t\t\t</content>\n\t\t\t\t\t</IconTabFilter>\n\t\t\t\t\t<!-- ___________________________________________   QUALITY BUTTON _____________________________ -->\n\t\t\t\t\t<IconTabFilter id=\"iconTabBarFilter2\" icon=\"sap-icon://decision\" tooltip=\"Quality Plan\" text=\"Tests\">\n\t\t\t\t\t\t<content>\n\t\t\t\t\t\t\t<Table id=\"lineItemsList\" width=\"auto\" items=\"{QualitySet}\" updateFinished=\"\" noDataText=\"No Tests done so far\" busyIndicatorDelay=\"{detailView>/lineItemTableDelay}\" class=\"sapUiResponsiveMargin\" mode=\"SingleSelectMaster\">\n\t\t\t\t\t\t\t\t<headerToolbar>\n\t\t\t\t\t\t\t\t\t<Toolbar id=\"lineItemsToolbarQuality\">\n\t\t\t\t\t\t\t\t\t\t<content>\n\t\t\t\t\t\t\t\t\t\t\t<Title id=\"lineItemsQuality\" text=\"Quality Tests\"/>\n\t\t\t\t\t\t\t\t\t\t\t<ToolbarSpacer id=\"__spacerq1\"/>\n\t\t\t\t\t\t\t\t\t\t\t<Button text=\"New Test\" icon=\"sap-icon://add\" press=\"onNewTest\"> </Button>\n\t\t\t\t\t\t\t\t\t\t\t<Button text=\"More\" icon=\"sap-icon://settings\" press=\"onMoreTest\"> </Button>\n\t\t\t\t\t\t\t\t\t\t</content>\n\t\t\t\t\t\t\t\t\t</Toolbar>\n\t\t\t\t\t\t\t\t</headerToolbar>\n\t\t\t\t\t\t\t\t<columns>\n\t\t\t\t\t\t\t\t\t<Column minScreenWidth=\"Tablet\"> <Text text=\"Status\"/>\t</Column>\n\t\t\t\t\t\t\t\t\t<Column minScreenWidth=\"Tablet\"> <Text text=\"Test Name\"/>\t</Column>\n\t\t\t\t\t\t\t\t\t<Column minScreenWidth=\"Tablet\" demandPopin=\"true\">\t<Text text=\"Description Name\"/>\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column minScreenWidth=\"Tablet\"> <Text text=\"Result\"/>\t</Column>\n\t\t\t\t\t\t\t\t\t<Column minScreenWidth=\"Tablet\"> <Text text=\"Responsable\"/>\t</Column>\n\t\t\t\t\t\t\t\t\t<Column minScreenWidth=\"Tablet\"> <Text text=\"Date\"/>\t</Column>\n\t\t\t\t\t\t\t\t</columns>\n\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t<ColumnListItem>\n\t\t\t\t\t\t\t\t\t\t<!-- <cells>\t<ObjectIdentifier title=\"{TestStatus}\"  />\t\t\t\t</cells> -->\n\t\t\t\t\t\t\t\t\t\t<!--<cells>\t<TextArea value=\"{TestStatus}\" valueState=\"{ path: 'StatusColorQ' ,    formatter: 'so.mng .model.formatter.statusState'}\" editable=\"false\"/> </cells> -->\n\t\t\t\t\t\t\t\t\t\t<cells>\t  <ObjectStatus text=\"{TestStatus}\" id=\"__status3q\" state=\"{ path: 'StatusColorQ' ,    formatter: 'formatter.statusState'}\"/>\t\t</cells> \n\t\t\t\t\t\t\t\t\t\t<cells>\t<ObjectIdentifier title=\"{TestName}\"/>\t\t\t\t\t</cells>\n\t\t\t\t\t\t\t\t\t\t<cells>\t<ObjectIdentifier title=\"{TestDescription}\"/>\t\t\t</cells>\n\t\t\t\t\t\t\t\t\t\t<cells>\t<ObjectIdentifier title=\"{TestResult}\"/>\t\t\t\t</cells>\n\t\t\t\t\t\t\t\t\t\t<cells>\t<ObjectIdentifier title=\"{Responsable}\"/>\t\t\t\t</cells>\n\t\t\t\t\t\t\t\t\t\t<cells>\t<ObjectIdentifier title=\"{Date}\"/>\t\t\t\t\t\t</cells>\n\t\t\t\t\t\t\t\t\t</ColumnListItem>\n\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t</content>\n\t\t\t\t\t</IconTabFilter>\n\t\t\t\t\t<!-- ___________________________________________   CHANGE REQUESTS _____________________________  -->\n\t\t\t\t\t<IconTabFilter id=\"iconTabBarFilter3\" icon=\"sap-icon://flag\" tooltip=\"{i18n>detailIconTabBarAttachments}\" text=\"CRs\"> \n\t\t\t\t\t\t<content>\n\t\t\t\t\t\t\t\t<Table id=\"lineItemCR\" width=\"auto\" items=\"{ChangesSet}\" updateFinished=\"\" noDataText=\"No Change Requests.\" busyIndicatorDelay=\"{detailView>/lineItemTableDelay}\" class=\"sapUiResponsiveMargin\" mode=\"SingleSelectMaster\">\n\t\t\t\t\t\t\t\t<headerToolbar>\n\t\t\t\t\t\t\t\t\t<Toolbar id=\"lineItemsToolbarCR\">\n\t\t\t\t\t\t\t\t\t\t<content>\n\t\t\t\t\t\t\t\t\t\t\t<Title id=\"lineItemsCR\" text=\"Change Request\"/>\n\t\t\t\t\t\t\t\t\t\t\t<ToolbarSpacer id=\"__spacerc1\"/>\n\t\t\t\t\t\t\t\t\t\t\t<Button text=\"Re-open\" icon=\"sap-icon://add\" press=\"oReopen\"> </Button>\n\t\t\t\t\t\t\t\t\t\t\t<Button text=\"Edit\" icon=\"sap-icon://edit\" press=\"onClose\"> </Button>\n\t\t\t\t\t\t\t\t\t\t\t<Button text=\"More\" icon=\"sap-icon://settings\" press=\"onMoreCR\"> </Button>\n\t\t\t\t\t\t\t\t\t\t</content>\n\t\t\t\t\t\t\t\t\t</Toolbar>\n\t\t\t\t\t\t\t\t</headerToolbar>\n\t\t\t\t\t\t\t\t<columns>\n\t\t\t\t\t\t\t\t\t<Column minScreenWidth=\"Tablet\"> <Text text=\"Change Request\"/>\t</Column>\n\t\t\t\t\t\t\t\t\t<Column minScreenWidth=\"Tablet\" demandPopin=\"true\">\t<Text text=\"Description\"/>\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column minScreenWidth=\"Tablet\"> <Text text=\"Leader\"/>\t</Column>\n\t\t\t\t\t\t\t\t\t<Column minScreenWidth=\"Tablet\"> <Text text=\"Notes\"/>\t</Column>\n\t\t\t\t\t\t\t\t\t<Column minScreenWidth=\"Tablet\"> <Text text=\"Cr. Date\"/>\t</Column>\n\t\t\t\t\t\t\t\t</columns>\n\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t<ColumnListItem>\n\t\t\t\t\t\t\t\t\t\t<!-- <cells>\t<ObjectIdentifier title=\"{ChNumber}\"  />\t\t\t\t</cells> -->\n\t\t\t\t\t\t\t\t\t\t<!--<cells>\t<TextArea value=\"{ChNumber}\" valueState=\"{ path: 'StatusColorC' ,    formatter: 'formatter.statusState'}\" editable=\"false\"/> </cells>--> \n\t\t\t\t\t\t\t\t\t\t<cells><ObjectStatus text=\"{ChNumber}\" id=\"__status3c\" state=\"{ path: 'StatusColorC' ,    formatter: 'formatter.statusState'}\"/></cells>\n\t\t\t\t\t\t\t\t\t\t<cells>\t<ObjectIdentifier title=\"{ChDesc}\"/>\t\t\t</cells>\n\t\t\t\t\t\t\t\t\t\t<cells>\t<ObjectIdentifier title=\"{ChLead}\"/>\t\t\t</cells>\n\t\t\t\t\t\t\t\t\t\t<cells>\t<ObjectIdentifier title=\"{ChNotes}\"/>\t\t\t</cells>\n\t\t\t\t\t\t\t\t\t\t<cells>\t<ObjectIdentifier title=\"{Date}\"/>\t\t\t\t</cells>\t\n\t\t\t\t\t\t\t\t\t</ColumnListItem>\n\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t</content>\n\t\t\t\t\t</IconTabFilter>                \n\n\t\t\t\t\t<!-- ___________________________________________   CLOUD   _____________________________  -->\n\t\t\t\t\t<IconTabFilter id=\"iconTabBarFilter4\" icon=\"sap-icon://tag-cloud-chart\" tooltip=\"User comments\" text=\"Cloud\"> \n\t\t\t\t\t\t<content>\n\t\t\t\t\t\t\t <!--<Button text=\"See details\" width=\"100px\" id=\"__button2\" press=\"onSplash\"/>\n\t\t\t\t\t\t\t<FlexBox width=\"100%\" id=\"boxWeb\" height=\"95%\"/>\n\t\t\t\t\t\t   <html:button>No, press me. I am native HTML Button.</html:button> \n\t\t\t\t\t\t    <html:div id=\"boxWeb3\" width=\"100%\" height=\"95%\"></html:div>-->\n\t\t\t\t\t\t\t<!--<html:iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/ZuJWQzjfU3o?list=RD70VWkJJLIxc\" frameborder=\"0\">\n\t\t\t\t\t\t\t</html:iframe> -->\n\t\t\t\t\t\t    <!--<html:iframe id=\"boxWeb2\" width=\"100%\" height=\"600\"></html:iframe> -->\n\t\t\t\t\t\t    <List noDataText=\"No Links available\" id=\"__list44\" headerText=\"Links \" items=\"{LinksSet}\">\n\t\t\t\t\t\t\t    <items>   <StandardListItem type=\"Navigation\" counter=\"0\" title=\"{Desc}\" description=\"{Link}\" icon=\"{icon}\" id=\"__item44\" press=\"onShowLink\"/>   </items>\n\t\t\t\t\t\t\t</List> \n\t\t\t\t\t\t    \n\t\t\t\t\t\t  </content>\n\t\t\t\t\t</IconTabFilter>\n\t\t\t\t\t<!-- ___________________________________________   STATISTICS  _____________________________  -->\n\t\t\t\t\t<IconTabFilter id=\"iconTabBarFilter5\" icon=\"sap-icon://along-stacked-chart\" tooltip=\"Statistics\" text=\"Statistics\"> \n\t\t\t\t\t\t<content>\n\t\t\t\t\t\t    <ObjectStatus text=\"Tab in development. It will display the User Access to the different softwares.\" id=\"__status33c\" state=\"Warning\"/>\n\t\t\t\t\t\t    <ObjectStatus text=\"Below it is just an exmaple of a makit chart.\" id=\"__status34c\" state=\"Warning\"/>\n\t\t\t\t\t\t\t<Label width=\"100%\" id=\"__label3\"/>\n\t\t\t\t\t\t\t<Label text=\"User Access\" width=\"100%\" id=\"__label0\" design=\"Bold\"/>\n\t\t\t\t\t\t\t<Label width=\"100%\" id=\"__label5\"/>\n\t\t\t\t\t\t\t<Image width=\"100%\" height=\"250px\" id=\"__image0\" src=\"../model/pic/graph.GIF\"/> \n\t\t\t\t\t          <!--<viz:VizFrame id=\"idVizFrameColumn\" height=\"100%\" width=\"100%\"/> -->\n\t\t\t\t\t          <!-- uiConfig=\"fiori\" xmlns:viz=\"sap.viz.ui5.controls\" -->\n\t\t\t\t\t\t\t<Label text=\"Execution Outcome\" width=\"100%\" id=\"__label1\" design=\"Bold\"/>\n\t\t\t\t\t\t</content>\n\t\t\t\t\t</IconTabFilter> \n\t\t\t\t</items>\n\t\t\t</IconTabBar>\n\t\t\t\n\t\t\t\n\t\t\t<!-- after tabs -->\n\t\t\t<VBox width=\"100%\" direction=\"Column\" id=\"__vbox0\" alignItems=\"Center\">\n\t\t\t    <items>\n\t\t\t       <!-- <Image width=\"50%\" height=\"50%\" id=\"__image0\" \n\t\t\t    \t\t\tsrc=\"http://www.excogitoweb.it/wp-content/uploads/services-web-development-services-on-light.png\"/> -->\n\t\t\t    </items>\n\t\t\t</VBox>\n\t\t</semantic:content>\n\t\t\n\t\t<semantic:sendEmailAction>\t\t<semantic:SendEmailAction id=\"shareEmail\" press=\"onShareEmailPress\"/>\t\t</semantic:sendEmailAction>\n\t\t<semantic:shareInJamAction>\t\t<semantic:ShareInJamAction id=\"shareInJam\" visible=\"{FLP>/isShareInJamActive}\" press=\"onShareInJamPress\"/>\t\t</semantic:shareInJamAction>\n\t\t<semantic:saveAsTileAction>\t\t<footerbar:AddBookmarkButton id=\"shareTile\" title=\"{detailView>/saveAsTileTitle}\"/>\t\t</semantic:saveAsTileAction>\n\t<semantic:printAction>\n\t    <semantic:PrintAction tooltip=\"Print\" id=\"__action0\"/>\n\t</semantic:printAction>\n\t<semantic:favoriteAction>\n\t    <semantic:FavoriteAction tooltip=\"Favorite\" id=\"__action1\"/>\n\t</semantic:favoriteAction>\n\t</semantic:DetailPage>\n</mvc:View>",
		"so/mng /Component.js": "sap.ui.define([\r\n\t\t\"sap/ui/core/UIComponent\",\r\n\t\t\"sap/ui/Device\",\r\n\t\t\"so/mng /model/models\",\r\n\t\t\"so/mng /controller/ListSelector\",\r\n\t\t\"so/mng /controller/ErrorHandler\"\r\n\t], function (UIComponent, Device, models, ListSelector, ErrorHandler) {\r\n\t\t\"use strict\";\r\n\r\n\t\treturn UIComponent.extend(\"so.mng .Component\", {\r\n\r\n\t\t\tmetadata : {\r\n\t\t\t\tmanifest : \"json\"\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * The component is initialized by UI5 automatically during the startup of the app and calls the init method once.\r\n\t\t\t * In this method, the FLP and device models are set and the router is initialized.\r\n\t\t\t * @public\r\n\t\t\t * @override\r\n\t\t\t */\r\n\t\t\tinit : function () {\r\n\t\t\t\tthis.oListSelector = new ListSelector();\r\n\t\t\t\tthis._oErrorHandler = new ErrorHandler(this);\r\n\r\n\t\t\t\t// set the device model\r\n\t\t\t\tthis.setModel(models.createDeviceModel(), \"device\");\r\n\t\t\t\t// set the FLP model\r\n\t\t\t\tthis.setModel(models.createFLPModel(), \"FLP\");\r\n\r\n\t\t\t\t// call the base component's init function and create the App view\r\n\t\t\t\tUIComponent.prototype.init.apply(this, arguments);\r\n\r\n\t\t\t\t// create the views based on the url/hash\r\n\t\t\t\tthis.getRouter().initialize();\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * The component is destroyed by UI5 automatically.\r\n\t\t\t * In this method, the ListSelector and ErrorHandler are destroyed.\r\n\t\t\t * @public\r\n\t\t\t * @override\r\n\t\t\t */\r\n\t\t\tdestroy : function () {\r\n\t\t\t\tthis.oListSelector.destroy();\r\n\t\t\t\tthis._oErrorHandler.destroy();\r\n\t\t\t\t// call the base component's destroy function\r\n\t\t\t\tUIComponent.prototype.destroy.apply(this, arguments);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * This method can be called to determine whether the sapUiSizeCompact or sapUiSizeCozy\r\n\t\t\t * design mode class should be set, which influences the size appearance of some controls.\r\n\t\t\t * @public\r\n\t\t\t * @return {string} css class, either 'sapUiSizeCompact' or 'sapUiSizeCozy' - or an empty string if no css class should be set\r\n\t\t\t */\r\n\t\t\tgetContentDensityClass : function() {\r\n\t\t\t\tif (this._sContentDensityClass === undefined) {\r\n\t\t\t\t\t// check whether FLP has already set the content density class; do nothing in this case\r\n\t\t\t\t\tif (jQuery(document.body).hasClass(\"sapUiSizeCozy\") || jQuery(document.body).hasClass(\"sapUiSizeCompact\")) {\r\n\t\t\t\t\t\tthis._sContentDensityClass = \"\";\r\n\t\t\t\t\t} else if (!Device.support.touch) { // apply \"compact\" mode if touch is not supported\r\n\t\t\t\t\t\tthis._sContentDensityClass = \"sapUiSizeCompact\";\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// \"cozy\" in case of touch support; default for most sap.m controls, but needed for desktop-first controls like sap.ui.table.Table\r\n\t\t\t\t\t\tthis._sContentDensityClass = \"sapUiSizeCozy\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn this._sContentDensityClass;\r\n\t\t\t}\r\n\r\n\t\t});\r\n\r\n\t}\r\n);",
		"so/mng /controller/BaseController.js": "/*global history */\r\nsap.ui.define([\r\n\t\t\"sap/ui/core/mvc/Controller\",\r\n\t\t\"sap/ui/core/routing/History\"\r\n\t], function (Controller, History) {\r\n\t\t\"use strict\";\r\n\r\n\t\treturn Controller.extend(\"so.mng .controller.BaseController\", {\r\n\t\t\t/**\r\n\t\t\t * Convenience method for accessing the router in every controller of the application.\r\n\t\t\t * @public\r\n\t\t\t * @returns {sap.ui.core.routing.Router} the router for this component\r\n\t\t\t */\r\n\t\t\tgetRouter : function () {\r\n\t\t\t\treturn this.getOwnerComponent().getRouter();\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Convenience method for getting the view model by name in every controller of the application.\r\n\t\t\t * @public\r\n\t\t\t * @param {string} sName the model name\r\n\t\t\t * @returns {sap.ui.model.Model} the model instance\r\n\t\t\t */\r\n\t\t\tgetModel : function (sName) {\r\n\t\t\t\treturn this.getView().getModel(sName);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Convenience method for setting the view model in every controller of the application.\r\n\t\t\t * @public\r\n\t\t\t * @param {sap.ui.model.Model} oModel the model instance\r\n\t\t\t * @param {string} sName the model name\r\n\t\t\t * @returns {sap.ui.mvc.View} the view instance\r\n\t\t\t */\r\n\t\t\tsetModel : function (oModel, sName) {\r\n\t\t\t\treturn this.getView().setModel(oModel, sName);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Convenience method for getting the resource bundle.\r\n\t\t\t * @public\r\n\t\t\t * @returns {sap.ui.model.resource.ResourceModel} the resourceModel of the component\r\n\t\t\t */\r\n\t\t\tgetResourceBundle : function () {\r\n\t\t\t\treturn this.getOwnerComponent().getModel(\"i18n\").getResourceBundle();\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Event handler  for navigating back.\r\n\t\t\t * It checks if there is a history entry. If yes, history.go(-1) will happen.\r\n\t\t\t * If not, it will replace the current entry of the browser history with the master route.\r\n\t\t\t * @public\r\n\t\t\t */\r\n\t\t\tonNavBack : function() {\r\n\t\t\t\tvar sPreviousHash = History.getInstance().getPreviousHash();\r\n\r\n\t\t\t\tif (sPreviousHash !== undefined) {\r\n\t\t\t\t\t// The history contains a previous entry\r\n\t\t\t\t\thistory.go(-1);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Otherwise we go backwards with a forward history\r\n\t\t\t\t\tvar bReplace = true;\r\n\t\t\t\t\tthis.getRouter().navTo(\"master\", {}, bReplace);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t});\r\n\r\n\t}\r\n);",
		"so/mng /controller/Master.controller.js": "/*global history */\r\n\r\nsap.ui.define([\r\n\t\t\"so/mng /controller/BaseController\",\r\n\t\t\"sap/ui/model/json/JSONModel\",\r\n\t\t\"sap/ui/model/Filter\",\r\n\t\t\"sap/ui/model/FilterOperator\",\r\n\t\t\"sap/m/GroupHeaderListItem\",\r\n\t\t\"sap/ui/Device\",\r\n\t\t\"so/mng /model/formatter\",\r\n\t\t\"sap/m/MessageToast\"\r\n\t], function (BaseController, JSONModel, Filter, FilterOperator, GroupHeaderListItem, Device, formatter, MessageToast) {\r\n\t\t\"use strict\";\r\n\r\n\t\treturn BaseController.extend(\"so.mng .controller.Master\", {\r\n\r\n\t\t\tformatter: formatter,\r\n\r\n\t\t\t/* =========================================================== */\r\n\t\t\t/* lifecycle methods                                           */\r\n\t\t\t/* =========================================================== */\r\n\r\n\t\t\t/**\r\n\t\t\t * Called when the master list controller is instantiated. It sets up the event handling for the master/detail communication and other lifecycle tasks.\r\n\t\t\t * @public\r\n\t\t\t */\r\n\t\t\tonInit : function () {\r\n\t\t\t\t// Control state model\r\n\t\t\t\tvar oList = this.byId(\"list\"),\r\n\t\t\t\t\toViewModel = this._createViewModel(),\r\n\t\t\t\t\t// Put down master list's original value for busy indicator delay,\r\n\t\t\t\t\t// so it can be restored later on. Busy handling on the master list is\r\n\t\t\t\t\t// taken care of by the master list itself.\r\n\t\t\t\t\tiOriginalBusyDelay = oList.getBusyIndicatorDelay();\r\n\r\n\r\n\t\t\t\tthis._oList = oList;\r\n\t\t\t\t// keeps the filter and search state\r\n\t\t\t\tthis._oListFilterState = {\r\n\t\t\t\t\taFilter : [],\r\n\t\t\t\t\taSearch : []\r\n\t\t\t\t};\r\n\r\n\t\t\t\tthis.setModel(oViewModel, \"masterView\");\r\n\t\t\t\t// Make sure, busy indication is showing immediately so there is no\r\n\t\t\t\t// break after the busy indication for loading the view's meta data is\r\n\t\t\t\t// ended (see promise 'oWhenMetadataIsLoaded' in AppController)\r\n\t\t\t\toList.attachEventOnce(\"updateFinished\", function(){\r\n\t\t\t\t\t// Restore original busy indicator delay for the list\r\n\t\t\t\t\toViewModel.setProperty(\"/delay\", iOriginalBusyDelay);\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.getView().addEventDelegate({\r\n\t\t\t\t\tonBeforeFirstShow: function () {\r\n\t\t\t\t\t\tthis.getOwnerComponent().oListSelector.setBoundMasterList(oList);\r\n\t\t\t\t\t}.bind(this)\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.getRouter().getRoute(\"master\").attachPatternMatched(this._onMasterMatched, this);\r\n\t\t\t\tthis.getRouter().attachBypassed(this.onBypassed, this);\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tonAddPress  : function(oEvent) {\r\n\t\t\t\tMessageToast.show(\"Add a new Software.\");\r\n\r\n\t\t\t\t\r\n\t\t\t},\r\n\r\n\t\t\t/* =========================================================== */\r\n\t\t\t/* event handlers                                              */\r\n\t\t\t/* =========================================================== */\r\n\r\n\t\t\t/**\r\n\t\t\t * After list data is available, this handler method updates the\r\n\t\t\t * master list counter and hides the pull to refresh control, if\r\n\t\t\t * necessary.\r\n\t\t\t * @param {sap.ui.base.Event} oEvent the update finished event\r\n\t\t\t * @public\r\n\t\t\t */\r\n\t\t\tonUpdateFinished : function (oEvent) {\r\n\t\t\t\t// update the master list object counter after new data is loaded\r\n\t\t\t\tthis._updateListItemCount(oEvent.getParameter(\"total\"));\r\n\t\t\t\t// hide pull to refresh if necessary\r\n\t\t\t\tthis.byId(\"pullToRefresh\").hide();\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Event handler for the master search field. Applies current\r\n\t\t\t * filter value and triggers a new search. If the search field's\r\n\t\t\t * 'refresh' button has been pressed, no new search is triggered\r\n\t\t\t * and the list binding is refresh instead.\r\n\t\t\t * @param {sap.ui.base.Event} oEvent the search event\r\n\t\t\t * @public\r\n\t\t\t */\r\n\t\t\tonSearch : function (oEvent) {\r\n\t\t\t\tif (oEvent.getParameters().refreshButtonPressed) {\r\n\t\t\t\t\t// Search field's 'refresh' button has been pressed.\r\n\t\t\t\t\t// This is visible if you select any master list item.\r\n\t\t\t\t\t// In this case no new search is triggered, we only\r\n\t\t\t\t\t// refresh the list binding.\r\n\t\t\t\t\tthis.onRefresh();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar sQuery = oEvent.getParameter(\"query\");\r\n\r\n\t\t\t\tif (sQuery) {\r\n\t\t\t\t\tthis._oListFilterState.aSearch = [new Filter(\"SoftwareName\", FilterOperator.Contains, sQuery)];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._oListFilterState.aSearch = [];\r\n\t\t\t\t}\r\n\t\t\t\tthis._applyFilterSearch();\r\n\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Event handler for refresh event. Keeps filter, sort\r\n\t\t\t * and group settings and refreshes the list binding.\r\n\t\t\t * @public\r\n\t\t\t */\r\n\t\t\tonRefresh : function () {\r\n\t\t\t\tthis._oList.getBinding(\"items\").refresh();\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Event handler for the sorter selection.\r\n\t\t\t * @param {sap.ui.base.Event} oEvent the select event\r\n\t\t\t * @public\r\n\t\t\t */\r\n\t\t\tonSort : function (oEvent) {\r\n\t\t\t\tvar sKey = oEvent.getSource().getSelectedItem().getKey(),\r\n\t\t\t\t\taSorters = this._oGroupSortState.sort(sKey);\r\n\r\n\t\t\t\tthis._applyGroupSort(aSorters);\r\n\t\t\t},\r\n\r\n\r\n\r\n\t\t\t/**\r\n\t\t\t * Event handler for the list selection event\r\n\t\t\t * @param {sap.ui.base.Event} oEvent the list selectionChange event\r\n\t\t\t * @public\r\n\t\t\t */\r\n\t\t\tonSelectionChange : function (oEvent) {\r\n\t\t\t\t// get the list item, either from the listItem parameter or from the event's source itself (will depend on the device-dependent mode).\r\n\t\t\t\tthis._showDetail(oEvent.getParameter(\"listItem\") || oEvent.getSource());\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Event handler for the bypassed event, which is fired when no routing pattern matched.\r\n\t\t\t * If there was an object selected in the master list, that selection is removed.\r\n\t\t\t * @public\r\n\t\t\t */\r\n\t\t\tonBypassed : function () {\r\n\t\t\t\tthis._oList.removeSelections(true);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Used to create GroupHeaders with non-capitalized caption.\r\n\t\t\t * These headers are inserted into the master list to\r\n\t\t\t * group the master list's items.\r\n\t\t\t * @param {Object} oGroup group whose text is to be displayed\r\n\t\t\t * @public\r\n\t\t\t * @returns {sap.m.GroupHeaderListItem} group header with non-capitalized caption.\r\n\t\t\t */\r\n\t\t\tcreateGroupHeader : function (oGroup) {\r\n\t\t\t\treturn new GroupHeaderListItem({\r\n\t\t\t\t\ttitle : oGroup.text,\r\n\t\t\t\t\tupperCase : false\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Navigates back in the browser history, if the entry was created by this app.\r\n\t\t\t * If not, it navigates to the Fiori Launchpad home page\r\n\t\t\t * @override\r\n\t\t\t * @public\r\n\t\t\t */\r\n\t\t\tonNavBack : function () {\r\n\t\t\t\tvar oHistory = sap.ui.core.routing.History.getInstance(),\r\n\t\t\t\t\tsPreviousHash = oHistory.getPreviousHash(),\r\n\t\t\t\t\toCrossAppNavigator = sap.ushell.Container.getService(\"CrossApplicationNavigation\");\r\n\r\n\t\t\t\tif (sPreviousHash !== undefined) {\r\n\t\t\t\t\t// The history contains a previous entry\r\n\t\t\t\t\thistory.go(-1);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Navigate back to FLP home\r\n\t\t\t\t\toCrossAppNavigator.toExternal({\r\n\t\t\t\t\t\ttarget : {shellHash: \"#Shell-home\"}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t/* =========================================================== */\r\n\t\t\t/* begin: internal methods                                     */\r\n\t\t\t/* =========================================================== */\r\n\r\n\r\n\t\t\t_createViewModel : function() {\r\n\t\t\t\treturn new JSONModel({\r\n\t\t\t\t\tisFilterBarVisible: false,\r\n\t\t\t\t\tfilterBarLabel: \"\",\r\n\t\t\t\t\tdelay: 0,\r\n\t\t\t\t\ttitle: this.getResourceBundle().getText(\"masterTitleCount\", [0]),\r\n\t\t\t\t\tnoDataText: this.getResourceBundle().getText(\"masterListNoDataText\"),\r\n\t\t\t\t\tsortBy: \"SoftwareName\",\r\n\t\t\t\t\tgroupBy: \"None\"\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * If the master route was hit (empty hash) we have to set\r\n\t\t\t * the hash to to the first item in the list as soon as the\r\n\t\t\t * listLoading is done and the first item in the list is known\r\n\t\t\t * @private\r\n\t\t\t */\r\n\t\t\t_onMasterMatched :  function() {\r\n\t\t\t\tthis.getOwnerComponent().oListSelector.oWhenListLoadingIsDone.then(\r\n\t\t\t\t\tfunction (mParams) {\r\n\t\t\t\t\t\tif (mParams.list.getMode() === \"None\") {\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar sObjectId = mParams.firstListitem.getBindingContext().getProperty(\"softwareID\");\r\n\t\t\t\t\t\tthis.getRouter().navTo(\"object\", {objectId : sObjectId}, true);\r\n\t\t\t\t\t}.bind(this),\r\n\t\t\t\t\tfunction (mParams) {\r\n\t\t\t\t\t\tif (mParams.error) {\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.getRouter().getTargets().display(\"detailNoObjectsAvailable\");\r\n\t\t\t\t\t}.bind(this)\r\n\t\t\t\t);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Shows the selected item on the detail page\r\n\t\t\t * On phones a additional history entry is created\r\n\t\t\t * @param {sap.m.ObjectListItem} oItem selected Item\r\n\t\t\t * @private\r\n\t\t\t */\r\n\t\t\t_showDetail : function (oItem) {\r\n\t\t\t\tvar bReplace = !Device.system.phone;\r\n\t\t\t\tthis.getRouter().navTo(\"object\", {\r\n\t\t\t\t\tobjectId : oItem.getBindingContext().getProperty(\"softwareID\")\r\n\t\t\t\t}, bReplace);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Sets the item count on the master list header\r\n\t\t\t * @param {integer} iTotalItems the total number of items in the list\r\n\t\t\t * @private\r\n\t\t\t */\r\n\t\t\t_updateListItemCount : function (iTotalItems) {\r\n\t\t\t\tvar sTitle;\r\n\t\t\t\t// only update the counter if the length is final\r\n\t\t\t\tif (this._oList.getBinding(\"items\").isLengthFinal()) {\r\n\t\t\t\t\tsTitle = this.getResourceBundle().getText(\"masterTitleCount\", [iTotalItems]);\r\n\t\t\t\t\tthis.getModel(\"masterView\").setProperty(\"/title\", sTitle);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Internal helper method to apply both filter and search state together on the list binding\r\n\t\t\t * @private\r\n\t\t\t */\r\n\t\t\t_applyFilterSearch : function () {\r\n\t\t\t\tvar aFilters = this._oListFilterState.aSearch.concat(this._oListFilterState.aFilter),\r\n\t\t\t\t\toViewModel = this.getModel(\"masterView\");\r\n\t\t\t\tthis._oList.getBinding(\"items\").filter(aFilters, \"Application\");\r\n\t\t\t\t// changes the noDataText of the list in case there are no filter results\r\n\t\t\t\tif (aFilters.length !== 0) {\r\n\t\t\t\t\toViewModel.setProperty(\"/noDataText\", this.getResourceBundle().getText(\"masterListNoDataWithFilterOrSearchText\"));\r\n\t\t\t\t} else if (this._oListFilterState.aSearch.length > 0) {\r\n\t\t\t\t\t// only reset the no data text to default when no new search was triggered\r\n\t\t\t\t\toViewModel.setProperty(\"/noDataText\", this.getResourceBundle().getText(\"masterListNoDataText\"));\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Internal helper method to apply both group and sort state together on the list binding\r\n\t\t\t * @param {sap.ui.model.Sorter[]} aSorters an array of sorters\r\n\t\t\t * @private\r\n\t\t\t */\r\n\t\t\t_applyGroupSort : function (aSorters) {\r\n\t\t\t\tthis._oList.getBinding(\"items\").sort(aSorters);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Internal helper method that sets the filter bar visibility property and the label's caption to be shown\r\n\t\t\t * @param {string} sFilterBarText the selected filter value\r\n\t\t\t * @private\r\n\t\t\t */\r\n\t\t\t_updateFilterBar : function (sFilterBarText) {\r\n\t\t\t\tvar oViewModel = this.getModel(\"masterView\");\r\n\t\t\t\toViewModel.setProperty(\"/isFilterBarVisible\", (this._oListFilterState.aFilter.length > 0));\r\n\t\t\t\toViewModel.setProperty(\"/filterBarLabel\", this.getResourceBundle().getText(\"masterFilterBarText\", [sFilterBarText]));\r\n\t\t\t}\r\n\r\n\t\t});\r\n\r\n\t}\r\n);",
		"so/mng /controller/ErrorHandler.js": "sap.ui.define([\n\t\t\"sap/ui/base/Object\",\n\t\t\"sap/m/MessageBox\"\n\t], function (UI5Object, MessageBox) {\n\t\t\"use strict\";\n\n\t\treturn UI5Object.extend(\"so.mng .controller.ErrorHandler\", {\n\n\t\t\t/**\n\t\t\t * Handles application errors by automatically attaching to the model events and displaying errors when needed.\n\t\t\t * @class\n\t\t\t * @param {sap.ui.core.UIComponent} oComponent reference to the app's component\n\t\t\t * @public\n\t\t\t * @alias so.mng .controller.ErrorHandler\n\t\t\t */\n\t\t\tconstructor : function (oComponent) {\n\t\t\t\tthis._oResourceBundle = oComponent.getModel(\"i18n\").getResourceBundle();\n\t\t\t\tthis._oComponent = oComponent;\n\t\t\t\tthis._oModel = oComponent.getModel();\n\t\t\t\tthis._bMessageOpen = false;\n\t\t\t\tthis._sErrorText = this._oResourceBundle.getText(\"errorText\");\n\n\t\t\t\tthis._oModel.attachMetadataFailed(function (oEvent) {\n\t\t\t\t\tvar oParams = oEvent.getParameters();\n\n\t\t\t\t\tthis._showMetadataError(oParams.response);\n\t\t\t\t}, this);\n\n\t\t\t\tthis._oModel.attachRequestFailed(function (oEvent) {\n\t\t\t\t\tvar oParams = oEvent.getParameters();\n\n\t\t\t\t\t// An entity that was not found in the service is also throwing a 404 error in oData.\n\t\t\t\t\t// We already cover this case with a notFound target so we skip it here.\n\t\t\t\t\t// A request that cannot be sent to the server is a technical error that we have to handle though\n\t\t\t\t\tif (oParams.response.statusCode !== \"404\" || (oParams.response.statusCode === 404 && oParams.response.responseText.indexOf(\"Cannot POST\") === 0)) {\n\t\t\t\t\t\tthis._showServiceError(oParams.response);\n\t\t\t\t\t}\n\t\t\t\t}, this);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Shows a {@link sap.m.MessageBox} when the metadata call has failed.\n\t\t\t * The user can try to refresh the metadata.\n\t\t\t * @param {string} sDetails a technical error to be displayed on request\n\t\t\t * @private\n\t\t\t */\n\t\t\t_showMetadataError : function (sDetails) {\n\t\t\t\tMessageBox.error(\n\t\t\t\t\tthis._sErrorText,\n\t\t\t\t\t{\n\t\t\t\t\t\tid : \"metadataErrorMessageBox\",\n\t\t\t\t\t\tdetails : sDetails,\n\t\t\t\t\t\tstyleClass : this._oComponent.getContentDensityClass(),\n\t\t\t\t\t\tactions : [MessageBox.Action.RETRY, MessageBox.Action.CLOSE],\n\t\t\t\t\t\tonClose : function (sAction) {\n\t\t\t\t\t\t\tif (sAction === MessageBox.Action.RETRY) {\n\t\t\t\t\t\t\t\tthis._oModel.refreshMetadata();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}.bind(this)\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Shows a {@link sap.m.MessageBox} when a service call has failed.\n\t\t\t * Only the first error message will be display.\n\t\t\t * @param {string} sDetails a technical error to be displayed on request\n\t\t\t * @private\n\t\t\t */\n\t\t\t_showServiceError : function (sDetails) {\n\t\t\t\tif (this._bMessageOpen) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis._bMessageOpen = true;\n\t\t\t\tMessageBox.error(\n\t\t\t\t\tthis._sErrorText,\n\t\t\t\t\t{\n\t\t\t\t\t\tid : \"serviceErrorMessageBox\",\n\t\t\t\t\t\tdetails : sDetails,\n\t\t\t\t\t\tstyleClass : this._oComponent.getContentDensityClass(),\n\t\t\t\t\t\tactions : [MessageBox.Action.CLOSE],\n\t\t\t\t\t\tonClose : function () {\n\t\t\t\t\t\t\tthis._bMessageOpen = false;\n\t\t\t\t\t\t}.bind(this)\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\n\t\t});\n\n\t}\n);",
		"so/mng /controller/DynamicJS.controller.js": "sap.ui.define([\n\t\"sap/ui/core/mvc/Controller\"\n], function(Controller) {\n\t\"use strict\";\n\n\treturn Controller.extend(\"so.mng.controller.DynamicJS\", {\n\n\t\t/**\n\t\t * Called when a controller is instantiated and its View controls (if available) are already created.\n\t\t * Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.\n\t\t * @memberOf so.mng.view.DynamicJS\n\t\t */\n\t\t//\tonInit: function() {\n\t\t//\n\t\t//\t},\n\n\t\t/**\n\t\t * Similar to onAfterRendering, but this hook is invoked before the controller's View is re-rendered\n\t\t * (NOT before the first rendering! onInit() is used for that one!).\n\t\t * @memberOf so.mng.view.DynamicJS\n\t\t */\n\t\t//\tonBeforeRendering: function() {\n\t\t//\n\t\t//\t},\n\n\t\t/**\n\t\t * Called when the View has been rendered (so its HTML is part of the document). Post-rendering manipulations of the HTML could be done here.\n\t\t * This hook is the same one that SAPUI5 controls get after being rendered.\n\t\t * @memberOf so.mng.view.DynamicJS\n\t\t */\n\t\t//\tonAfterRendering: function() {\n\t\t//\n\t\t//\t},\n\n\t\t/**\n\t\t * Called when the Controller is destroyed. Use this one to free resources and finalize activities.\n\t\t * @memberOf so.mng.view.DynamicJS\n\t\t */\n\t\t//\tonExit: function() {\n\t\t//\n\t\t//\t}\n\n\t});\n\n});",
		"so/mng /controller/ListSelector.js": "sap.ui.define([\r\n\t\t\"sap/ui/base/Object\"\r\n\t], function (BaseObject) {\r\n\t\t\"use strict\";\r\n\r\n\t\treturn BaseObject.extend(\"so.mng .model.ListSelector\", {\r\n\r\n\t\t\t/**\r\n\t\t\t * Provides a convenience API for selecting list items. All the functions will wait until the initial load of the a List passed to the instance by the setBoundMasterList\r\n\t\t\t * function.\r\n\t\t\t * @class\r\n\t\t\t * @public\r\n\t\t\t * @alias so.mng .model.ListSelector\r\n\t\t\t */\r\n\r\n\t\t\tconstructor : function () {\r\n\t\t\t\tthis._oWhenListHasBeenSet = new Promise(function (fnResolveListHasBeenSet) {\r\n\t\t\t\t\tthis._fnResolveListHasBeenSet = fnResolveListHasBeenSet;\r\n\t\t\t\t}.bind(this));\r\n\t\t\t\t// This promise needs to be created in the constructor, since it is allowed to\r\n\t\t\t\t// invoke selectItem functions before calling setBoundMasterList\r\n\t\t\t\tthis.oWhenListLoadingIsDone = new Promise(function (fnResolve, fnReject) {\r\n\t\t\t\t\t// Used to wait until the setBound masterList function is invoked\r\n\t\t\t\t\tthis._oWhenListHasBeenSet\r\n\t\t\t\t\t\t.then(function (oList) {\r\n\t\t\t\t\t\t\toList.getBinding(\"items\").attachEventOnce(\"dataReceived\",\r\n\t\t\t\t\t\t\t\tfunction (oData) {\r\n\t\t\t\t\t\t\t\t\tif (!oData.getParameter(\"data\")) {\r\n\t\t\t\t\t\t\t\t\t\tfnReject({\r\n\t\t\t\t\t\t\t\t\t\t\tlist : oList,\r\n\t\t\t\t\t\t\t\t\t\t\terror : true\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tvar oFirstListItem = oList.getItems()[0];\r\n\t\t\t\t\t\t\t\t\tif (oFirstListItem) {\r\n\t\t\t\t\t\t\t\t\t\t// Have to make sure that first list Item is selected\r\n\t\t\t\t\t\t\t\t\t\t// and a select event is triggered. Like that, the corresponding\r\n\t\t\t\t\t\t\t\t\t\t// detail page is loaded automatically\r\n\t\t\t\t\t\t\t\t\t\tfnResolve({\r\n\t\t\t\t\t\t\t\t\t\t\tlist : oList,\r\n\t\t\t\t\t\t\t\t\t\t\tfirstListitem : oFirstListItem\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t// No items in the list\r\n\t\t\t\t\t\t\t\t\t\tfnReject({\r\n\t\t\t\t\t\t\t\t\t\t\tlist : oList,\r\n\t\t\t\t\t\t\t\t\t\t\terror : false\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}.bind(this));\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * A bound list should be passed in here. Should be done, before the list has received its initial data from the server.\r\n\t\t\t * May only be invoked once per ListSelector instance.\r\n\t\t\t * @param {sap.m.List} oList The list all the select functions will be invoked on.\r\n\t\t\t * @public\r\n\t\t\t */\r\n\t\t\tsetBoundMasterList : function (oList) {\r\n\t\t\t\tthis._oList = oList;\r\n\t\t\t\tthis._fnResolveListHasBeenSet(oList);\r\n\t\t\t},\r\n\r\n\r\n\t\t\t/**\r\n\t\t\t * Tries to select and scroll to a list item with a matching binding context. If there are no items matching the binding context or the ListMode is none,\r\n\t\t\t * no selection/scrolling will happen\r\n\t\t\t * @param {string} sBindingPath the binding path matching the binding path of a list item\r\n\t\t\t * @public\r\n\t\t\t */\r\n\t\t\tselectAListItem : function (sBindingPath) {\r\n\r\n\t\t\t\tthis.oWhenListLoadingIsDone.then(\r\n\t\t\t\t\tfunction () {\r\n\t\t\t\t\t\tvar oList = this._oList,\r\n\t\t\t\t\t\t\toSelectedItem;\r\n\r\n\t\t\t\t\t\tif (oList.getMode() === \"None\") {\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\toSelectedItem = oList.getSelectedItem();\r\n\r\n\t\t\t\t\t\t// skip update if the current selection is already matching the object path\r\n\t\t\t\t\t\tif (oSelectedItem && oSelectedItem.getBindingContext().getPath() === sBindingPath) {\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\toList.getItems().some(function (oItem) {\r\n\t\t\t\t\t\t\tif (oItem.getBindingContext() && oItem.getBindingContext().getPath() === sBindingPath) {\r\n\t\t\t\t\t\t\t\toList.setSelectedItem(oItem);\r\n\t\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}.bind(this),\r\n\t\t\t\t\tfunction () {\r\n\t\t\t\t\t\tjQuery.sap.log.warning(\"Could not select the list item with the path\" + sBindingPath + \" because the list encountered an error or had no items\");\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t},\r\n\r\n\r\n\t\t\t/* =========================================================== */\r\n\t\t\t/* Convenience Functions for List Selection Change Event       */\r\n\t\t\t/* =========================================================== */\r\n\r\n\t\t\t/**\r\n\t\t\t * Attaches a listener and listener function to the ListSelector's bound master list. By using\r\n\t\t\t * a promise, the listener is added, even if the list is not available when 'attachListSelectionChange'\r\n\t\t\t * is called.\r\n\t\t\t * @param {function} fnFunction the function to be executed when the list fires a selection change event\r\n\t\t\t * @param {function} oListener the listener object\r\n\t\t\t * @return {so.mng .model.ListSelector} the list selector object for method chaining\r\n\t\t\t * @public\r\n\t\t\t */\r\n\t\t\tattachListSelectionChange : function (fnFunction, oListener) {\r\n\t\t\t\tthis._oWhenListHasBeenSet.then(function () {\r\n\t\t\t\t\tthis._oList.attachSelectionChange(fnFunction, oListener);\r\n\t\t\t\t}.bind(this));\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Detaches a listener and listener function from the ListSelector's bound master list. By using\r\n\t\t\t * a promise, the listener is removed, even if the list is not available when 'detachListSelectionChange'\r\n\t\t\t * is called.\r\n\t\t\t * @param {function} fnFunction the function to be executed when the list fires a selection change event\r\n\t\t\t * @param {function} oListener the listener object\r\n\t\t\t * @return {so.mng .model.ListSelector} the list selector object for method chaining\r\n\t\t\t * @public\r\n\t\t\t */\r\n\t\t\tdetachListSelectionChange : function (fnFunction, oListener) {\r\n\t\t\t\tthis._oWhenListHasBeenSet.then(function () {\r\n\t\t\t\t\tthis._oList.detachSelectionChange(fnFunction, oListener);\r\n\t\t\t\t}.bind(this));\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Removes all selections from master list.\r\n\t\t\t * Does not trigger 'selectionChange' event on master list, though.\r\n\t\t\t * @public\r\n\t\t\t */\r\n\t\t\tclearMasterListSelection : function () {\r\n\t\t\t\t//use promise to make sure that 'this._oList' is available\r\n\t\t\t\tthis._oWhenListHasBeenSet.then(function () {\r\n\t\t\t\t\tthis._oList.removeSelections(true);\r\n\t\t\t\t}.bind(this));\r\n\t\t\t}\r\n\r\n\t\t});\r\n\r\n\t}\r\n);",
		"so/mng /controller/App.controller.js": "sap.ui.define([\n\t\t\"so/mng /controller/BaseController\",\n\t\t\"sap/ui/model/json/JSONModel\"\n\t], function (BaseController, JSONModel) {\n\t\t\"use strict\";\n\n\t\treturn BaseController.extend(\"so.mng .controller.App\", {\n\n\t\t\tonInit : function () {\n\t\t\t\tvar oViewModel,\n\t\t\t\t\tfnSetAppNotBusy,\n\t\t\t\t\toListSelector = this.getOwnerComponent().oListSelector,\n\t\t\t\t\tiOriginalBusyDelay = this.getView().getBusyIndicatorDelay();\n\n\t\t\t\toViewModel = new JSONModel({\n\t\t\t\t\tbusy : true,\n\t\t\t\t\tdelay : 0\n\t\t\t\t});\n\t\t\t\tthis.setModel(oViewModel, \"appView\");\n\n\t\t\t\tfnSetAppNotBusy = function() {\n\t\t\t\t\toViewModel.setProperty(\"/busy\", false);\n\t\t\t\t\toViewModel.setProperty(\"/delay\", iOriginalBusyDelay);\n\t\t\t\t};\n\n\t\t\t\tthis.getOwnerComponent().getModel().metadataLoaded()\n\t\t\t\t\t\t.then(fnSetAppNotBusy);\n\n\t\t\t\t// Makes sure that master view is hidden in split app\n\t\t\t\t// after a new list entry has been selected.\n\t\t\t\toListSelector.attachListSelectionChange(function () {\n\t\t\t\t\tthis.byId(\"idAppControl\").hideMaster();\n\t\t\t\t}, this);\n\n\t\t\t\t// apply content density mode to root view\n\t\t\t\tthis.getView().addStyleClass(this.getOwnerComponent().getContentDensityClass());\n\t\t\t}\n\n\t\t});\n\n\t}\n);",
		"so/mng /model/formatter.js": "sap.ui.define([\n\t], function () {\n\t\t\"use strict\";\n\n\t\treturn {\n\t\t\t/**\n\t\t\t * Rounds the currency value to 2 digits\n\t\t\t *\n\t\t\t * @public\n\t\t\t * @param {string} sValue value to be formatted\n\t\t\t * @returns {string} formatted currency value with 2 digits\n\t\t\t */\n\t\t\tcurrencyValue : function (sValue) {\n\t\t\t\tif (!sValue) {\n\t\t\t\t\treturn \"\";\n\t\t\t\t}\n\n\t\t\t\treturn parseFloat(sValue).toFixed(2);\n\t\t\t}, \n\t\t\t\n\t\t_statusStateMap : {\n\t\t\t\"Success\" : \"Success\",\n\t\t\t\"Warning\" : \"Warning\", //Warning\n\t\t\t\"Error\"   : \"Error\",\n\t\t\t\"None\"    : \"None\"\n\n\n\t\t},\n\t\n\t\t_statusTextMap : {\n\t\t\t\"Allocate\" : \"Allocate\",\n\t\t\t\"Bench\" : \"Bench\"\n\t\t},\n\t\n\t\tstatusText :  function (value) {\n\t\t\t\n\t\t\t//var map = so.mng .model.formatter._statusTextMap;\n\t\t    var map = this._statusTextMap;\n\t\t\treturn (value && map[value]) ? map[value] : \"?\";\n\t\t},\n\t\t\n\t\tstatusState :  function (value) {\n\t\t\tvar map = this._statusStateMap;\n\t\t\treturn (value && map[value]) ? map[value] : \"None\";\n\t\t},\n\t\t\n\t\tgetTransparentLogoLink: function(sImgName) {\n\t\t    var sRootPath = jQuery.sap.getModulePath(\"so.mng \");\n\t\t    return sRootPath + \"/model/pic/graph.GIF\";\n\t\t    \n\t\t}\n\n\t\t};\n\n\t}\n);",
		"so/mng /localService/mockserver.js": "sap.ui.define([\n\t\t\"sap/ui/core/util/MockServer\"\n\t], function (MockServer) {\n\t\t\"use strict\";\n\n\t\tvar oMockServer,\n\t\t\t_sAppModulePath = \"so/mng /\",\n\t\t\t_sJsonFilesModulePath = _sAppModulePath + \"localService/mockdata\";\n\n\t\treturn {\n\t\t\t/**\n\t\t\t * Initializes the mock server.\n\t\t\t * You can configure the delay with the URL parameter \"serverDelay\".\n\t\t\t * The local mock data in this folder is returned instead of the real data for testing.\n\t\t\t * @public\n\t\t\t */\n\n\t\t\tinit : function () {\n\t\t\t\tvar oUriParameters = jQuery.sap.getUriParameters(),\n\t\t\t\t\tsJsonFilesUrl = jQuery.sap.getModulePath(_sJsonFilesModulePath),\n\t\t\t\t\tsManifestUrl = jQuery.sap.getModulePath(_sAppModulePath + \"manifest\", \".json\"),\n\t\t\t\t\tsEntity = \"softwareSet\",\n\t\t\t\t\tsErrorParam = oUriParameters.get(\"errorType\"),\n\t\t\t\t\tiErrorCode = sErrorParam === \"badRequest\" ? 400 : 500,\n\t\t\t\t\toManifest = jQuery.sap.syncGetJSON(sManifestUrl).data,\n\t\t\t\t\toMainDataSource = oManifest[\"sap.app\"].dataSources.mainService,\n\t\t\t\t\tsMetadataUrl = jQuery.sap.getModulePath(_sAppModulePath + oMainDataSource.settings.localUri.replace(\".xml\", \"\"), \".xml\"),\n\t\t\t\t\t// ensure there is a trailing slash\n\t\t\t\t\tsMockServerUrl = /.*\\/$/.test(oMainDataSource.uri) ? oMainDataSource.uri : oMainDataSource.uri + \"/\";\n\n\t\t\t\toMockServer = new MockServer({\n\t\t\t\t\trootUri : sMockServerUrl\n\t\t\t\t});\n\n\t\t\t\t// configure mock server with a delay of 1s\n\t\t\t\tMockServer.config({\n\t\t\t\t\tautoRespond : true,\n\t\t\t\t\tautoRespondAfter : (oUriParameters.get(\"serverDelay\") || 1000)\n\t\t\t\t});\n\n\t\t\t\toMockServer.simulate(sMetadataUrl, {\n\t\t\t\t\tsMockdataBaseUrl : sJsonFilesUrl,\n\t\t\t\t\tbGenerateMissingMockData : true\n\t\t\t\t});\n\n\t\t\t\tvar aRequests = oMockServer.getRequests(),\n\t\t\t\t\tfnResponse = function (iErrCode, sMessage, aRequest) {\n\t\t\t\t\t\taRequest.response = function(oXhr){\n\t\t\t\t\t\t\toXhr.respond(iErrCode, {\"Content-Type\": \"text/plain;charset=utf-8\"}, sMessage);\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\n\t\t\t\t// handling the metadata error test\n\t\t\t\tif (oUriParameters.get(\"metadataError\")) {\n\t\t\t\t\taRequests.forEach( function ( aEntry ) {\n\t\t\t\t\t\tif (aEntry.path.toString().indexOf(\"$metadata\") > -1) {\n\t\t\t\t\t\t\tfnResponse(500, \"metadata Error\", aEntry);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// Handling request errors\n\t\t\t\tif (sErrorParam) {\n\t\t\t\t\taRequests.forEach( function ( aEntry ) {\n\t\t\t\t\t\tif (aEntry.path.toString().indexOf(sEntity) > -1) {\n\t\t\t\t\t\t\tfnResponse(iErrorCode, sErrorParam, aEntry);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\toMockServer.start();\n\n\t\t\t\tjQuery.sap.log.info(\"Running the app with mock data\");\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * @public returns the mockserver of the app, should be used in integration tests\n\t\t\t * @returns {sap.ui.core.util.MockServer} the mockserver instance\n\t\t\t */\n\t\t\tgetMockServer : function () {\n\t\t\t\treturn oMockServer;\n\t\t\t}\n\t\t};\n\n\t}\n);",
		"so/mng /model/GroupSortState.js": "sap.ui.define([\n\t\t\"sap/ui/base/Object\",\n\t\t\"sap/ui/model/Sorter\"\n\t], function (BaseObject, Sorter) {\n\t\"use strict\";\n\n\treturn BaseObject.extend(\"so.mng .model.GroupSortState\", {\n\n\t\t/**\n\t\t * Creates sorters and groupers for the master list.\n\t\t * Since grouping also means sorting, this class modifies the viewmodel.\n\t\t * If a user groups by a field, and there is a corresponding sort option, the option will be chosen.\n\t\t * If a user ungroups, the sorting will be reset to the default sorting.\n\t\t * @class\n\t\t * @public\n\t\t * @param {sap.ui.model.json.JSONModel} oViewModel the model of the current view\n\t\t * @param {function} fnGroupFunction the grouping function to be applied\n\t\t * @alias so.mng .model.GroupSortState\n\t\t */\n\t\tconstructor: function (oViewModel, fnGroupFunction) {\n\t\t\tthis._oViewModel = oViewModel;\n\t\t\tthis._fnGroupFunction = fnGroupFunction;\n\t\t},\n\n\t\t/**\n\t\t * Sorts by SoftwareName, or by \n\t\t *\n\t\t * @param {string} sKey - the key of the field used for grouping\n\t\t * @returns {sap.ui.model.Sorter[]} an array of sorters\n\t\t */\n\t\tsort: function (sKey) {\n\t\t\tvar sGroupedBy = this._oViewModel.getProperty(\"/groupBy\");\n\n\t\t\tif (sGroupedBy !== \"None\") {\n\t\t\t\t// If the list is grouped, remove the grouping since the user wants to sort by something different\n\t\t\t\t// Grouping only works if the list is primary sorted by the grouping - the first sorten contains a grouper function\n\t\t\t\tthis._oViewModel.setProperty(\"/groupBy\", \"None\");\n\t\t\t}\n\n\t\t\treturn [new Sorter(sKey, false)];\n\t\t},\n\n\t\t/**\n\t\t * Groups by , or resets the grouping for the key \"None\"\n\t\t *\n\t\t * @param {string} sKey - the key of the field used for grouping\n\t\t * @returns {sap.ui.model.Sorter[]} an array of sorters\n\t\t */\n\t\tgroup: function (sKey) {\n\t\t\tvar aSorters = [];\n\n\t\t\tif (sKey === \"\") {\n\t\t\t\t// Grouping means sorting so we set the select to the same Entity used for grouping\n\t\t\t\tthis._oViewModel.setProperty(\"/sortBy\", \"\");\n\n\t\t\t\taSorters.push(\n\t\t\t\t\tnew Sorter(\"\", false,\n\t\t\t\t\t\tthis._fnGroupFunction.bind(this))\n\t\t\t\t);\n\t\t\t} else if (sKey === \"None\") {\n\t\t\t\t// select the default sorting again\n\t\t\t\tthis._oViewModel.setProperty(\"/sortBy\", \"SoftwareName\");\n\t\t\t}\n\n\t\t\treturn aSorters;\n\t\t}\n\n\t});\n});",
		"so/mng /model/models.js": "sap.ui.define([\r\n\t\t\"sap/ui/model/json/JSONModel\",\r\n\t\t\"sap/ui/Device\"\r\n\t], function (JSONModel, Device) {\r\n\t\t\"use strict\";\r\n\r\n\t\treturn {\r\n\t\t\tcreateDeviceModel : function () {\r\n\t\t\t\tvar oModel = new JSONModel(Device);\r\n\t\t\t\toModel.setDefaultBindingMode(\"OneWay\");\r\n\t\t\t\treturn oModel;\r\n\t\t\t},\r\n\r\n\t\t\tcreateFLPModel : function () {\r\n\t\t\t\tvar fnGetuser = jQuery.sap.getObject(\"sap.ushell.Container.getUser\"),\r\n\t\t\t\t\tbIsShareInJamActive = fnGetuser ? fnGetuser().isJamActive() : false,\r\n\t\t\t\t\toModel = new JSONModel({\r\n\t\t\t\t\t\tisShareInJamActive: bIsShareInJamActive\r\n\t\t\t\t\t});\r\n\t\t\t\toModel.setDefaultBindingMode(\"OneWay\");\r\n\t\t\t\treturn oModel;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t}\r\n);",
		"so/mng /view/App.view.xml": "<mvc:View\n\t\tcontrollerName=\"so.mng .controller.App\"\n\t\txmlns:mvc=\"sap.ui.core.mvc\"\n\t\tdisplayBlock=\"true\"\n\t\tbusy=\"{appView>/busy}\"\n\t\tbusyIndicatorDelay=\"{appView>/delay}\"\n\t\txmlns=\"sap.m\">\n\t<SplitApp id=\"idAppControl\" />\n</mvc:View>",
		"so/mng /view/Master.view.xml": "<mvc:View xmlns:mvc=\"sap.ui.core.mvc\" xmlns:core=\"sap.ui.core\" xmlns=\"sap.m\" xmlns:semantic=\"sap.m.semantic\" controllerName=\"so.mng .controller.Master\">\n\n\t<semantic:MasterPage id=\"page\" title=\"{masterView>/title}\" navButtonPress=\"onNavBack\" showNavButton=\"true\">\n\t\t<semantic:subHeader>\n\t\t\t<Bar id=\"headerBar\">\n\t\t\t\t<contentMiddle>\n\t\t\t\t\t<SearchField id=\"searchField\" showRefreshButton=\"{= !${device>/support/touch} }\" tooltip=\"{i18n>masterSearchTooltip}\" width=\"100%\" search=\"onSearch\">\n\t\t\t\t\t</SearchField>\n\t\t\t\t</contentMiddle>\n\t\t\t</Bar>\n\t\t</semantic:subHeader>\n\n\t\t<semantic:content>\n\t\t\t<PullToRefresh id=\"pullToRefresh\" visible=\"{device>/support/touch}\" refresh=\"onRefresh\"/>\n\t\t\t<!-- For client side filtering add this to the items attribute:  parameters: {operationMode: 'Client'}}\" -->\n\t\t\t<List id=\"list\" items=\"{       path: '/softwareSet',       sorter: {        path: 'SoftwareName',        descending: false        },       groupHeaderFactory: '.createGroupHeader'      }\" busyIndicatorDelay=\"{masterView>/delay}\" noDataText=\"{masterView>/noDataText}\" mode=\"{= ${device>/system/phone} ? 'None' : 'SingleSelectMaster'}\" growing=\"true\" growingScrollToLoad=\"true\" updateFinished=\"onUpdateFinished\" selectionChange=\"onSelectionChange\">\n\t\t\t\t<infoToolbar>\n\t\t\t\t\t<Toolbar active=\"true\" id=\"filterBar\" visible=\"{masterView>/isFilterBarVisible}\" press=\"onOpenViewSettings\">\n\t\t\t\t\t\t<Title id=\"filterBarLabel\" text=\"{masterView>/filterBarLabel}\"/>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</infoToolbar>\n\t\t\t\t<items>\n\t\t\t\t\t<ObjectListItem type=\"{= ${device>/system/phone} ? 'Active' : 'Inactive'}\" press=\"onSelectionChange\" title=\"{SoftwareName}\">\n\t\t\t\t\t<firstStatus>\n\t\t\t\t\t   <!-- <ObjectStatus text=\"{Status}\" id=\"__status0\" state=\"{ path: 'SatateColor' ,    formatter: 'resourcemanagement.util.Formatter.statusState'}\"/> -->\n\t\t\t\t\t   <ObjectStatus text=\"{Status}\" id=\"__status0\" state=\"{ path: 'SatateColor' ,    formatter: 'formatter.statusState'}\"/>\n\t\t\t\t\t</firstStatus>\n\t\t\t\t\t<attributes>\n\t\t\t\t\t    <ObjectAttribute active=\"false\" id=\"__attribute0\" text=\"{softwareID}\"/>\n\t\t\t\t\t    <ObjectAttribute text=\"{Customer}\" active=\"false\" id=\"__attribute1\" title=\"Customer\"/>\n\t\t\t\t\t</attributes>\n\t\t\t\t\t<secondStatus>\n\t\t\t\t\t    <ObjectStatus text=\"{IncidentSt}\" id=\"__status1\" state=\"{ path: 'IncidentStCo' ,    formatter: 'formatter.statusState'}\"/>\n\t\t\t\t\t</secondStatus>\n\t\t\t\t\t</ObjectListItem>\n\t\t\t\t</items>\n\t\t\t</List>\n\t\t</semantic:content>\n\n\t<semantic:customFooterContent>\n\n\t    <Button width=\"100px\" id=\"__button0\" icon=\"sap-icon://add\" press=\"onAddPress\"/>\n\n\t</semantic:customFooterContent>\n\n\t<semantic:filter>\n\n\t    <semantic:FilterSelect tooltip=\"Filter\" id=\"__select0\"/>\n\n\t</semantic:filter>\n\n\t<semantic:sort>\n\n\t    <semantic:SortAction tooltip=\"Sort\" id=\"__action0\"/>\n\n\t</semantic:sort>\n\n\t</semantic:MasterPage>\n\n</mvc:View>",
		"so/mng /view/NotFound.view.xml": "<mvc:View\n\t\tcontrollerName=\"so.mng .controller.BaseController\"\n\t\txmlns:mvc=\"sap.ui.core.mvc\"\n\t\txmlns=\"sap.m\">\n\n\t<MessagePage\n\t\t\tid=\"page\"\n\t\t\ttitle=\"{i18n>notFoundTitle}\"\n\t\t\ttext=\"{i18n>notFoundText}\"\n\t\t\ticon=\"{sap-icon://document}\"\n\t\t\tdescription=\"\"\n\t\t\tshowNavButton=\"{device>/system/phone}\"\n\t\t\tnavButtonPress=\"onNavBack\">\n\t</MessagePage>\n\n</mvc:View>",
		"so/mng /view/DetailObjectNotFound.view.xml": "<mvc:View\n\t\tcontrollerName=\"so.mng .controller.BaseController\"\n\t\txmlns:mvc=\"sap.ui.core.mvc\"\n\t\txmlns=\"sap.m\">\n\n\t<MessagePage\n\t\t\tid=\"page\"\n\t\t\ttitle=\"{i18n>detailTitle}\"\n\t\t\ttext=\"{i18n>noObjectFoundText}\"\n\t\t\ticon=\"{sap-icon://product}\"\n\t\t\tdescription=\"\"\n\t\t\tshowNavButton=\"{device>/system/phone}\"\n\t\t\tnavButtonPress=\"onNavBack\">\n\t</MessagePage>\n\n</mvc:View>",
		"so/mng /view/ViewSettingsDialog.fragment.xml": "<core:FragmentDefinition\n\t\txmlns=\"sap.m\"\n\t\txmlns:core=\"sap.ui.core\">\n\n\t<ViewSettingsDialog\n\t\t\tid=\"viewSettingsDialog\"\n\t\t\tconfirm=\"onConfirmViewSettingsDialog\"\n\t\t\tresetFilters=\"onViewSettingsDialogResetFilters\">\n\t\t<filterItems>\n\t\t\t<ViewSettingsFilterItem\n\t\t\t\t\tid=\"filterItems\"\n\t\t\t\t\ttext=\"{i18n>masterFilterName}\"\n\t\t\t\t\tkey=\"Price\"\n\t\t\t\t\tmultiSelect=\"false\">\n\t\t\t\t<items>\n\t\t\t\t\t<ViewSettingsItem\n\t\t\t\t\t\t\ttext=\"{i18n>masterFilter1}\"\n\t\t\t\t\t\t\tkey=\"Filter1\"\n\t\t\t\t\t\t\tid=\"viewFilter1\"/>\n\t\t\t\t\t<ViewSettingsItem\n\t\t\t\t\t\t\ttext=\"{i18n>masterFilter2}\"\n\t\t\t\t\t\t\tkey=\"Filter2\"\n\t\t\t\t\t\t\tid=\"viewFilter2\"/>\n\t\t\t\t</items>\n\t\t\t</ViewSettingsFilterItem>\n\t\t</filterItems>\n\t</ViewSettingsDialog>\n\n</core:FragmentDefinition>",
		"so/mng /view/DynamicJS.view.js": "sap.ui.jsview(\"so.mng.view.DynamicJS\", {\n\n\t/** Specifies the Controller belonging to this View. \n\t * In the case that it is not implemented, or that \"null\" is returned, this View does not have a Controller.\n\t * @memberOf so.mng.view.DynamicJS\n\t */\n\tgetControllerName: function() {\n\t\treturn \"so.mng.controller.DynamicJS\";\n\t},\n\n\t/** Is initially called once after the Controller has been instantiated. It is the place where the UI is constructed. \n\t * Since the Controller is given to this method, its event handlers can be attached right away.\n\t * @memberOf so.mng.view.DynamicJS\n\t */\n\tcreateContent: function(oController) {\n\t\tvar oPage = new sap.m.Page({\n\t\t\ttitle: \"Title\",\n\t\t\tcontent: []\n\t\t});\n\n\t\tvar app = new sap.m.App(\"myApp\", {\n\t\t\tinitialPage: \"oPage\"\n\t\t});\n\t\tapp.addPage(oPage);\n\t\treturn app;\n\t}\n\n});",
		"so/mng /view/DetailNoObjectsAvailable.view.xml": "<mvc:View\n\t\tcontrollerName=\"so.mng .controller.BaseController\"\n\t\txmlns:mvc=\"sap.ui.core.mvc\"\n\t\txmlns=\"sap.m\">\n\n\t<MessagePage\n\t\t\tid=\"page\"\n\t\t\ttitle=\"{i18n>notAvailableViewTitle}\"\n\t\t\ttext=\"{i18n>noObjectsAvailableText}\"\n\t\t\ticon=\"{sap-icon://product}\"\n\t\t\tdescription=\"\"\n\t\t\tshowNavButton=\"{device>/system/phone}\"\n\t\t\tnavButtonPress=\"onNavBack\">\n\t</MessagePage>\n\n</mvc:View>"
	}
});